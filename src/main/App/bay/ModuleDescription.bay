/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace App;

use Runtime.Entity.Hook;
use Runtime.Web.Annotations.PageNotFound;
use Runtime.Web.Annotations.Route;
use Runtime.Web.Hooks.Components;
use Runtime.Web.Hooks.SetupLayout;


static class ModuleDescription
{
	/**
	 * Returns module name
	 * @return string
	 */
	public static string getModuleName()
	{
		return "App";
	}
	
	
	/**
	 * Returns module name
	 * @return string
	 */
	public static string getModuleVersion()
	{
		return "0.0.1";
	}
	
	
	/**
	 * Returns required modules
	 * @return Map<string>
	 */
	pure Map<string> requiredModules() =>
	{
	};
	
	
	/**
	 * Returns enities
	 */
	pure Collection<Dict> entities() =>
	[
		/* Setup layout */
		SetupLayout::create({
			"admin": "App.Components.Layout.AdminLayoutModel",
		}),
		
		/* Setup hook */
		new Hook(classof Components, {
			"components": ["App.Components.Blocks.CSS"],
			"header": ["App.Components.Blocks.Seo"],
		}),
		
		#ifdef BACKEND then
		new PageNotFound("App.Components.Pages.NotFoundPage.NotFoundPageModel"),
		new Route("App.Components.Routes"),
		#endif
	];
}